LOAD_CONST (0)
BUILD_LIST 1
LOAD_CONST (9)
BINARY_MULTIPLY
STORE_FAST $buckets

LOAD_CONST (0)
LOAD_CONST (None)
IMPORT_NAME sys
LOAD_ATTR argv
DUP_TOP

# First argument is .pyasm file name, so we're skipping it
LOAD_CONST (2)
BINARY_SUBSCR
LOAD_GLOBAL open
ROT_TWO
CALL_FUNCTION 1
LOAD_ATTR read
CALL_FUNCTION
LOAD_ATTR strip
CALL_FUNCTION
LOAD_ATTR split
LOAD_CONST (',')
CALL_FUNCTION 1
GET_ITER
initloop: FOR_ITER 24
LOAD_GLOBAL int
ROT_TWO
CALL_FUNCTION 1
LOAD_FAST $buckets
ROT_TWO
DUP_TOP_TWO
BINARY_SUBSCR
LOAD_CONST (1)
INPLACE_ADD
ROT_THREE
STORE_SUBSCR
JUMP_ABSOLUTE :initloop

LOAD_CONST (3)
BINARY_SUBSCR
LOAD_GLOBAL int
ROT_TWO
CALL_FUNCTION 1
LOAD_CONST (1)
BINARY_SUBTRACT
LOAD_CONST (80)
LOAD_CONST (256)
BUILD_LIST 2
ROT_TWO
BINARY_SUBSCR

mainloop: LOAD_CONST (1)
BINARY_SUBTRACT

# New buckets
LOAD_CONST (0)
BUILD_LIST 1
LOAD_CONST (9)
BINARY_MULTIPLY
STORE_FAST $new_buckets

LOAD_FAST $buckets
LOAD_CONST (0)
BINARY_SUBSCR
LOAD_FAST $new_buckets
DUP_TOP_TWO
LOAD_CONST (6)
# new_buckets[6] = buckets[0]
STORE_SUBSCR
LOAD_CONST (8)
STORE_SUBSCR

LOAD_CONST (8)
bucketsloop: DUP_TOP
LOAD_FAST $buckets
ROT_TWO
BINARY_SUBSCR
ROT_TWO
DUP_TOP
LOAD_CONST (1)
BINARY_SUBTRACT
DUP_TOP
LOAD_FAST $new_buckets
ROT_TWO
BINARY_SUBSCR
# *internal screaming*
ROT_FOUR
ROT_FOUR
ROT_THREE
BINARY_ADD
ROT_THREE
ROT_THREE
LOAD_FAST $new_buckets
ROT_TWO
STORE_SUBSCR
LOAD_CONST (1)
BINARY_SUBTRACT
JUMP_IF_TRUE_OR_POP :bucketsloop

LOAD_FAST $new_buckets
STORE_FAST $buckets

JUMP_IF_TRUE_OR_POP :mainloop

LOAD_GLOBAL print
LOAD_GLOBAL sum
LOAD_FAST $buckets
CALL_FUNCTION 1
CALL_FUNCTION 1

LOAD_CONST (None)
RETURN_VALUE
